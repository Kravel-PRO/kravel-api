<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kravel.server.api.article.mapper.ArticleMapper">
    <select id="findAllPlaces" parameterType="hashmap" resultType="articleMapDTO">
        SELECT
            tam.ARTICLE_ID articleId,
            tai.SUBJECT subject,
            t.IMG_URL imgUrl,
            tmm.MEDIA_ID mediaId,
            tmm.MEDIA_NAME mediaName
        FROM
            tb_article_main tam
        INNER JOIN
            tb_article_info tai
        ON tam.ARTICLE_ID = tai.ARTICLE_ID
        LEFT JOIN
            tb_article_img t
        ON tam.ARTICLE_ID = t.ARTICLE_ID
        LEFT JOIN
            tb_media_main tmm
        ON tam.MEDIA_ID = tmm.MEDIA_ID

        WHERE
            tam.LATITUDE > #{param.latitude} - #{param.height}
            AND #{param.latitude} + #{param.height} > tam.LATITUDE

            AND tam.LONGITUDE > #{param.longitude} - #{param.width}
            AND #{param.longitude} + #{param.width} > tam.LONGITUDE

            AND tai.INFO_LANGU = "KOR"
            AND tam.USE_AT = "Y"
        ORDER BY
            tam.${param.sort} ${param.order}
        LIMIT
            ${param.offset}, ${param.max};
    </select>

    <select id="findPlaceById" parameterType="hashmap" resultType="articleDetailDTO">
        SELECT
            tam.ARTICLE_ID articleId,
            tai.SUBJECT subject,
            tai.CONTENTS contents,
            tai.LOCATION location,
            tam.LATITUDE latitud,
            tam.LONGITUDE longitude,
            tmm.MEDIA_ID mediaId,
            tmm.MEDIA_NAME mediaName,
            COUNT(tar.REVIEW_ID) reviewCnt
        FROM
            tb_article_main tam
            INNER JOIN
                tb_article_info tai
            ON tam.ARTICLE_ID = tai.ARTICLE_ID
            INNER JOIN
                tb_article_review tar
            ON tai.ARTICLE_ID = tar.ARTICLE_ID
            LEFT JOIN
                tb_media_main tmm
            ON tar.MEDIA_ID = tmm.MEDIA_ID
        WHERE
            tam.ARTICLE_ID = #{param.articleId}
            AND tai.INFO_LANGU = #{param.langu}
            AND tam.USE_AT = "Y";
    </select>

    <select id="findAllCelebrities" parameterType="hashmap" resultType="celebrityDTO">
        SELECT
            tcm.CELEBRITY_ID celebrityId,
            tcm.CELEBRITY_NAME celebrityName
        FROM
            tb_article_main tam
            INNER JOIN
                tb_celebrity_main tcm
            ON tam.ARTICLE_ID = tcm.ARTICLE_ID
        WHERE
            tam.ARTICLE_ID = #{param.articleId};
    </select>

    <select id="findAllReviews" parameterType="hashmap" resultType="articleReviewListDTO">
        SELECT
            tar.REVIEW_ID reviewId,
            tari.IMG_URL representImgUrl
        FROM
            tb_article_review tar
            INNER JOIN
                tb_article_review_img tari
            ON tar.REVIEW_ID = tari.REVIEW_ID
            AND tari.REPRESENT = true
        WHERE
            tar.ARTICLE_ID = #{param.articleId}
            AND tar.USE_AT = "Y"
        ORDER BY
            tar.${param.sort} ${param.order}
        LIMIT
            ${param.offset}, ${param.max};
    </select>
    
    <select id="checkExistArticleScrap" parameterType="hashmap" resultType="int">
        SELECT
            COUNT(tcm.SCRAP_ID) scrapId
        FROM
            tb_scrap_main tcm
        WHERE
            tcm.MEMBER_ID = #{param.memberId}
            AND tcm.ARTICLE_ID = #{param.articleId}
    </select>

    <insert id="saveArticleScrap" parameterType="hashmap">
        INSERT INTO
            tb_scrap_main (
                MEMBER_ID,
                ARTICLE_ID
            )
        VALUES (
            #{param.memberId},
            #{param.articleId}
        );
    </insert>

    <delete id="removeArticleScrap" parameterType="hashmap">
        DELETE FROM
            tb_scrap_main
        WHERE
            MEMBER_ID = #{param.memberId}
            AND ARTICLE_ID = #{param.articleId};
    </delete>

</mapper>