<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kravel.server.api.article.mapper.ArticleMapper">
    <select id="findAllPlaces" parameterType="hashmap" resultType="articleListDTO">
        SELECT
            tam.ARTICLE_ID articleId,
            tai.SUBJECT subejct,
            t.IMG_URL imgUrl,
            COUNT(tmm.MEDIA_ID) mediaCnt,
            COUNT(tcm.CELEBRITY_ID) celebrityCnt
        FROM
            tb_article_main tam
            INNER JOIN
                tb_article_info tai on tam.ARTICLE_ID = tai.ARTICLE_ID
            LEFT JOIN
                tb_article_img t on tam.ARTICLE_ID = t.ARTICLE_ID
            LEFT JOIN
                tb_media_main tmm ON tam.ARTICLE_ID = tmm.MEDIA_ID
            LEFT JOIN
                tb_celebrity_main tcm ON tam.ARTICLE_ID = tcm.ARTICLE_ID
        WHERE
            tai.SUBJECT LIKE CONCAT("%", #{param.search}, "%")
            AND tai.INFO_LANGU = #{param.langu}
            AND tam.USE_AT = "Y"
        ORDER BY
            tam.${param.sort} ${param.order}
        LIMIT
            ${param.offset}, ${param.max};
    </select>

    <select id="findPlaceByArticleId" parameterType="hashmap" resultType="articleDetailDTO">
        SELECT
            tam.ARTICLE_ID articleId,
            tai.SUBJECT subject,
            tai.CONTENTS contents,
            tai.LOCATION location,
            tam.LATITUDE latitud,
            tam.LONGITUDE longitude,
            tmm.MEDIA_ID mediaId,
            tmm.MEDIA_NAME mediaName,
            COUNT(tar.REVIEW_ID) reviewCnt
        FROM
            tb_article_main tam
            INNER JOIN
                tb_article_info tai
            ON tam.ARTICLE_ID = tai.ARTICLE_ID
            INNER JOIN
                tb_article_review tar
            ON tai.ARTICLE_ID = tar.ARTICLE_ID
            LEFT JOIN
                tb_media_main tmm
            ON tar.MEDIA_ID = tmm.MEDIA_ID
        WHERE
            tam.ARTICLE_ID = #{param.articleId}
            AND tai.INFO_LANGU = #{param.langu}
            AND tam.USE_AT = "Y";
    </select>

    <select id="findCelebrityListByArticleId" parameterType="hashmap" resultType="celebrityDTO">
        SELECT
            tcm.CELEBRITY_ID celebrityId,
            tcm.CELEBRITY_NAME celebrityName
        FROM
            tb_article_main tam
            INNER JOIN
                tb_celebrity_main tcm
            ON tam.ARTICLE_ID = tcm.ARTICLE_ID
        WHERE
            tam.ARTICLE_ID = #{param.articleId};
    </select>

    <select id="findReviewListByArticleId" parameterType="hashmap" resultType="articleReviewListDTO">
        SELECT
            tar.REVIEW_ID reviewId,
            tari.IMG_URL representImgUrl
        FROM
            tb_article_review tar
            INNER JOIN
                tb_article_review_img tari
            ON tar.REVIEW_ID = tari.REVIEW_ID
            AND tari.REPRESENT = true
        WHERE
            tar.ARTICLE_ID = #{param.articleId}
            AND tar.USE_AT = "Y"
        ORDER BY
            tar.${param.sort} ${param.order}
        LIMIT
            ${param.offset}, ${param.max};
    </select>

    <select id="findReviewDetailImgByReviewId" parameterType="hashmap" resultType="rwImgDTO">
        SELECT
            tari.IMG_ID imgId,
            tari.IMG_URL imgUrl,
            tari.REPRESENT repesent
        FROM
            tb_article_review tar
            INNER JOIN
                tb_article_review_img tari
            ON tar.REVIEW_ID = tari.REVIEW_ID
        WHERE
            tar.ARTICLE_ID = #{param.articleId}
            AND tar.REVIEW_ID = #{param.reviewId}
            AND tar.USE_AT = "Y";
    </select>
    
    <select id="findReviewLikeCntByReviewId" parameterType="hashmap" resultType="articleReviewDTO">
        SELECT
            tar.REVIEW_ID reviewId,
            COUNT(trl.LIKE_ID) likeCnt,
            b.likeState likeState
        FROM
            tb_article_review tar
            LEFT JOIN
                tb_review_like trl
            ON tar.REVIEW_ID = trl.REVIEW_ID,
            (
                SELECT
                    COUNT(trl2.MEMBER_ID) likeState
                FROM
                    tb_article_review tar2
                    LEFT JOIN
                        tb_review_like trl2
                    ON tar2.REVIEW_ID = trl2.REVIEW_ID
                WHERE
                    trl2.REVIEW_ID = tar2.REVIEW_ID
                    AND trl2.MEMBER_ID = #{param.memberId}
                ) b
        WHERE
            tar.ARTICLE_ID = #{param.articleId}
            AND tar.REVIEW_ID = #{param.reviewId}
            AND tar.USE_AT = "Y";
    </select>
</mapper>