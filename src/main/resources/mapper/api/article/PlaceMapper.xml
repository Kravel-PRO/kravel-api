<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kravel.server.api.mapper.PlaceMapper">
    <select id="findAllPlaces" parameterType="hashmap" resultType="articleMapDTO">
        SELECT
            tam.place_id placeID,
            tai.title subject,
            tam.image_url imageUrl,
            tmm.media_id mediaId,
            tmm.media_name mediaName
        FROM
            place tam
        INNER JOIN
            place_info tai
        ON tam.place_id = tai.place_id
        LEFT JOIN
            media tmm
        ON tam.media_id = tmm.media_id

        WHERE
            tam.latitude > #{param.latitude} - #{param.height}
            AND #{param.latitude} + #{param.height} > tam.latitude

            AND tam.longitude > #{param.longitude} - #{param.width}
            AND #{param.longitude} + #{param.width} > tam.longitude

            AND tai.speech = "KOR"
            AND tam.use_at = "Y"
        ORDER BY
            tam.${param.sort} ${param.order}
        LIMIT
            ${param.offset}, ${param.size};
    </select>

    <select id="findPlaceById" parameterType="hashmap" resultType="articleDetailDTO">
        SELECT tam.place_id placeId,
               tai.title title,
               tai.contents contents,
               tai.location location,
               tam.latitude latitude,
               tam.longitude longitude,
               tmm.media_id mediaId,
               tmm.media_name mediaName

        FROM place tam
            INNER JOIN place_info tai
            ON tam.ARTICLE_ID = tai.ARTICLE_ID

            LEFT JOIN media tmm
            ON tam.media_id = tmm.MEDIA_ID

        WHERE tam.place_id = #{param.placeId}
          AND tai.speech = #{param.langu}
          AND tam.use_at = 'Y';
    </select>

    <select id="findAllCelebrities" parameterType="hashmap" resultType="celebrityDTO">
        SELECT
            tcm.celebrity_id celebrityId,
            tcm.celebrity_name celebrityName,
            tcm.image_url imageUrl
        FROM
            place tam
            INNER JOIN
                celebrity tcm
            ON tam.place_id = tcm.place_id
        WHERE
            tam.place_id = #{param.placeId};
    </select>

    <select id="checkExistArticleScrap" parameterType="hashmap" resultType="int">
        SELECT
            COUNT(tcm.scrap_id) scrapId
        FROM
            scrap tcm
        WHERE
            tcm.member_id = #{param.memberId}
            AND tcm.place_id = #{param.placeId}
    </select>

    <insert id="savePlaceScrap" parameterType="hashmap">
        INSERT INTO
            scrap (
                member_id,
                place_id
            )
        VALUES (
            #{param.memberId},
            #{param.placeId}
        );
    </insert>

    <delete id="removePlaceScrap" parameterType="hashmap">
        DELETE FROM
            scrap
        WHERE
            member_id = #{param.memberId}
            AND place_id = #{param.placeId};
    </delete>

    <select id="findAllPlaceByCelebrity" parameterType="hashmap" resultType="rawPlaceRelatedCelebrityDTO">
        SELECT b.*,
               GROUP_CONCAT(tcm2.celebrity_name) celebrities
        FROM
            (
                SELECT tai.place_id placeId,
                       tai.title title,
                       tam.image_url imageUrl,
                       tmm.media_name mediaName
                FROM celebrity tcm
                    INNER JOIN place_celebrity tac
                    ON tcm.celebrity_id = tac.celebrity_id

                    INNER JOIN place tam
                    ON tac.place_id = tam.place_id
                        AND tam.use_at = 'Y'

                    LEFT JOIN place_info tai
                    ON tam.placeId = tai.placeId
                        AND tai.speech = 'KOR'

                    LEFT JOIN celebrity_media tcm3
                    ON tcm.celebrity_id = tcm3.celebrity_id

                    LEFT JOIN media tmm
                    ON tcm3.media_id = tmm.media_id
                WHERE tcm.celebrity_id = #{param.celebrityId}
                AND tcm.use_at = 'Y'
            ) b

            LEFT JOIN place_celebrity tac2
            ON b.placeId = tac2.place_id

            LEFT JOIN celebrity tcm2
            ON tac2.celebrity_id = tcm2.celebrity_id
                AND tcm2.use_at = 'Y'
        LIMIT ${param.offset}, ${param.size};
    </select>


    <select id="findAllPlaceByMedia" parameterType="hashmap" resultType="rawPlaceRelatedMedia">
        SELECT tam.place_id placeId,
               tai.title title,
               tam.image_url imageUrl,
               GROUP_CONCAT(tcm.celebrity_name) celebrities
        FROM media tmm
            LEFT JOIN place tam
            ON tmm.media_id = tam.media_id
            AND tam.use_at = 'Y'

            LEFT JOIN place_info tai
            ON tam.place_id = tai.place_id
            AND tai.speech = #{param.speech}

            LEFT JOIN celebrity tcm
            ON tam.place_id = tcm.place_id

        WHERE tmm.media_id = #{param.mediaId}
        ORDER BY tam.created_date
        LIMIT #{param.offset}, #{param.max};
    </select>
</mapper>