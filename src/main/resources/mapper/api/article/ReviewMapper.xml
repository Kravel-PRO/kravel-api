<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kravel.server.api.article.mapper.ReviewMapper">

    <select id="findAllReviews" parameterType="hashmap" resultType="articleReviewListDTO">
        SELECT
            tar.REVIEW_ID reviewId,
            tari.IMG_URL representImgUrl
        FROM
            tb_article_review tar
            INNER JOIN
                tb_article_review_img tari
            ON tar.REVIEW_ID = tari.REVIEW_ID
            AND tari.REPRESENT = true
        WHERE
            <choose>
                <when test="param.articleId != null">
                    tar.ARTICLE_ID = #{param.articleId}
                </when>

                <when test="param.celebrityId != null">
                    tar.CELEBRITY_ID = #{param.celebrityId}
                </when>
            </choose>
            AND tar.USE_AT = "Y"
        ORDER BY
            tar.${param.sort} ${param.order}
        LIMIT
            ${param.offset}, ${param.max};
    </select>

    <select id="findReviewDetailImgById" parameterType="hashmap" resultType="imgDTO">
        SELECT
            tari.IMG_ID imgId,
            tari.IMG_URL imgUrl,
            tari.REPRESENT repesent
        FROM
            tb_article_review tar
            INNER JOIN
                tb_article_review_img tari
            ON tar.REVIEW_ID = tari.REVIEW_ID
        WHERE
            tar.ARTICLE_ID = #{param.articleId}
            AND tar.REVIEW_ID = #{param.reviewId}
            AND tar.USE_AT = "Y";
    </select>

    <select id="findReviewLikeCntById" parameterType="hashmap" resultType="articleReviewDTO">
        SELECT
            tar.REVIEW_ID reviewId,
            COUNT(trl.LIKE_ID) likeCnt,
            b.likeState likeState
        FROM
            tb_article_review tar
            LEFT JOIN
                tb_review_like trl
            ON tar.REVIEW_ID = trl.REVIEW_ID,
            (
                SELECT
                    COUNT(trl2.MEMBER_ID) likeState
                FROM
                    tb_article_review tar2
                    LEFT JOIN
                        tb_review_like trl2
                    ON tar2.REVIEW_ID = trl2.REVIEW_ID
                WHERE
                    trl2.REVIEW_ID = tar2.REVIEW_ID
                    AND trl2.MEMBER_ID = #{param.memberId}
                ) b
        WHERE
            tar.ARTICLE_ID = #{param.articleId}
            AND tar.REVIEW_ID = #{param.reviewId}
            AND tar.USE_AT = "Y";
    </select>

    <select id="findArticleReviewById" parameterType="hashmap" resultType="articleReview">
        SELECT
            tam.MEDIA_ID mediaId,
            tcm.CELEBRITY_ID celebrityId
        FROM
            tb_article_main tam
        INNER JOIN
            tb_celebrity_main tcm
        ON tam.ARTICLE_ID = tcm.ARTICLE_ID
        WHERE
            tam.ARTICLE_ID = #{param.articleId};
    </select>

    <insert id="saveReview" parameterType="hashmap" useGeneratedKeys="true" keyProperty="reviewId">
        INSERT INTO
            tb_article_review(
                MEMBER_ID,
                ARTICLE_ID,
                <if test="param.mediaId != null and param.mediaId != ''">
                    MEDIA_ID,
                </if>
                <if test="param.celebrityId != null and param.celebrityId != ''">
                    CELEBRITY_ID
                </if>
            )
        VALUES (
            #{param.memberId},
            #{param.articleId}
            <if test="param.mediaId != null and param.mediaId != ''">
                ,#{param.mediaId}
            </if>
            <if test="param.celebrityId != null and param.celebrityId != ''">
                ,#{param.celebrityId}
            </if>
        );
    </insert>

    <insert id="saveReviewImg" parameterType="hashmap">
        INSERT INTO
            tb_article_review_img(
                REVIEW_ID,
                IMG_URL,
                REPRESENT
            )
        VALUES
            <foreach item="item" index="index" collection="param.imgDTOs" separator=",">
                (
                #{param.reviewId},
                #{item.imgUrl},
                #{item.represent}
                )
            </foreach>
    </insert>

    <select id="checkExistReviewLike" parameterType="hashmap" resultType="int">
        SELECT
            COUNT(trl.LIKE_ID) likeId
        FROM
            tb_review_like trl
        WHERE
            trl.REVIEW_ID = #{param.reviewId}
            AND trl.MEMBER_ID = #{param.memberId}
    </select>

    <insert id="saveReviewLike" parameterType="hashmap">
        INSERT INTO
            tb_review_like(
                REVIEW_ID,
                MEMBER_ID
            )
        VALUES (
            #{param.reviewId},
            #{param.memberId}
        );
    </insert>

    <delete id="removeReviewLike" parameterType="hashmap">
        DELETE FROM
            tb_review_like
        WHERE
            REVIEW_ID = #{param.reviewId}
            AND MEMBER_ID = #{param.memberId};
    </delete>
</mapper>