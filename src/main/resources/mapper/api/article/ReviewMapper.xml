<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kravel.server.api.mapper.ReviewMapper">

    <select id="findAllReviews" parameterType="hashmap" resultType="reviewOverviewDTO">
        SELECT
            tar.review_id reviewId,
            tar.image_url imageUrl
        FROM
            review tar
        WHERE
            <choose>
                <when test="param.placeId != null">
                    tar.place_id = #{param.placeId}
                </when>

                <when test="param.celebrityId != null">
                    tar.celebrity_id = #{param.celebrityId}
                </when>

                <when test="param.mediaId != null">
                    tar.media_id = #{param.mediaId}
                </when>
            </choose>
            AND tar.use_at = "Y"
        ORDER BY
            tar.${param.sort} ${param.order}
        LIMIT
            ${param.offset}, ${param.size};
    </select>

    <select id="findReviewDetailById" parameterType="hashmap" resultType="reviewDetailDTO">
        SELECT
            tar.review_id reviewId,
            COUNT(trl.like_id) likeCount,
            b.likeState likeState,
            tar.image_url imageUrl
        FROM
            review tar
            LEFT JOIN
                review_like trl
            ON tar.review_id = trl.review_id,
            (
                SELECT
                    COUNT(trl2.member_id) likeState
                FROM
                    review tar2
                    LEFT JOIN
                        review_like trl2
                    ON tar2.review_id = trl2.review_id
                WHERE
                    trl2.review_id = tar2.review_id
                    AND trl2.member_id = #{param.memberId}
                ) b
        WHERE
            tar.place_id = #{param.place_id}
            AND tar.review_id = #{param.reviewId}
            AND tar.use_at = "Y";
    </select>

    <insert id="saveReview" parameterType="hashmap" useGeneratedKeys="true" keyProperty="reviewId">
        INSERT INTO
            review(
                member_id,
                place_id,
                image_url

                <if test="param.mediaId != null and param.mediaId != ''">
                    , media_id
                </if>
                <if test="param.celebrityId != null and param.celebrityId != ''">
                    , celebrity_id
                </if>
            )
        VALUES (
            #{param.memberId},
            #{param.placeId},
            #{param.imageUrl}
            <if test="param.mediaId != null and param.mediaId != ''">
                ,#{param.mediaId}
            </if>
            <if test="param.celebrityId != null and param.celebrityId != ''">
                ,#{param.celebrityId}
            </if>
        );
    </insert>

    <select id="checkExistReviewLike" parameterType="hashmap" resultType="int">
        SELECT
            COUNT(trl.review_like_id) likeId
        FROM
            review_like trl
        WHERE
            trl.review_id = #{param.reviewId}
            AND trl.member_id = #{param.memberId}
    </select>

    <insert id="saveReviewLike" parameterType="hashmap">
        INSERT INTO
            review_like(
                review_id,
                member_id
            )
        VALUES (
            #{param.reviewId},
            #{param.memberId}
        );
    </insert>

    <delete id="removeReviewLike" parameterType="hashmap">
        DELETE FROM
            review_like
        WHERE
            review_id = #{param.reviewId}
            AND member_id = #{param.memberId};
    </delete>
</mapper>